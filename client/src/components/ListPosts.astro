---
import type { CollectionEntry } from 'astro:content'
import PostCard from '@/components/PostCard'
import { cn } from '@/utils'
import BigPost from './BigPost.astro'
import BigPostAlt from './BigPostAlt.astro'

type Props = {
	posts: CollectionEntry<'blog'>[]
	FirstBig?: boolean
	classes?: string
	isIntro?: boolean
}

const { posts, FirstBig = false, isIntro = false, classes } = Astro.props
// const { remarkPluginFrontmatter } = posts[0].render()
---

<section
	class={cn(
		isIntro
			? 'flex justify-between flex-col md:flex-row '
			: 'grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3',
		`gap-8 mt-3`,
		FirstBig && `md:[&>*:first-child]:col-span-2`,
		classes
	)}
>
	{
		isIntro && (
			<BigPost id={posts[0].id} data={posts[0].data} slug={posts[0].slug} isIntro={isIntro} />
		)
	}
	{
		isIntro ? (
			<div class='gap-4'>
				{posts.slice(1, 4).map(async (post) => {
					const { remarkPluginFrontmatter } = await post.render()

					return (
						<BigPostAlt
							id={post.id}
							data={post.data}
							slug={post.slug}
							readTime={remarkPluginFrontmatter.minutesRead}
							isIntro={isIntro}
						/>
					)
				})}
			</div>
		) : (
			posts.map(async (post) => {
				const { remarkPluginFrontmatter } = await post.render()

				return (
					<PostCard
						id={post.id}
						data={post.data}
						slug={post.slug}
						readTime={remarkPluginFrontmatter.minutesRead}
						isIntro={isIntro}
					/>
				)
			})
		)
	}
</section>
